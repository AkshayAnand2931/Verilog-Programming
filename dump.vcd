$date
	Thu Aug 25 15:08:54 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 1 ! y $end
$var wire 1 " cout $end
$var reg 1 # cin $end
$var reg 1 $ i0 $end
$var reg 1 % i1 $end
$var reg 2 & op [1:0] $end
$scope module f1 $end
$var wire 1 # cin $end
$var wire 1 $ i0 $end
$var wire 1 % i1 $end
$var wire 2 ' op [1:0] $end
$var wire 1 ! y $end
$var wire 1 ( or1 $end
$var wire 1 ) mux1 $end
$var wire 1 * gate1 $end
$var wire 1 " cout $end
$var wire 1 + and1 $end
$var wire 1 , add1 $end
$scope module f1 $end
$var wire 1 % a $end
$var wire 1 # b $end
$var wire 1 * c $end
$upscope $end
$scope module f2 $end
$var wire 1 $ a $end
$var wire 1 * b $end
$var wire 1 # cin $end
$var wire 1 - z $end
$var wire 1 . y $end
$var wire 1 / x $end
$var wire 1 , s $end
$var wire 1 " cy $end
$scope module a1 $end
$var wire 1 $ a $end
$var wire 1 * b $end
$var wire 1 . c $end
$upscope $end
$scope module a2 $end
$var wire 1 # a $end
$var wire 1 - c $end
$var wire 1 / b $end
$upscope $end
$scope module o1 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 " c $end
$upscope $end
$scope module x1 $end
$var wire 1 $ a $end
$var wire 1 * b $end
$var wire 1 / c $end
$upscope $end
$scope module x2 $end
$var wire 1 # a $end
$var wire 1 / b $end
$var wire 1 , c $end
$upscope $end
$upscope $end
$scope module f3 $end
$var wire 1 $ a $end
$var wire 1 % b $end
$var wire 1 + c $end
$upscope $end
$scope module f4 $end
$var wire 1 $ a $end
$var wire 1 % b $end
$var wire 1 ( c $end
$upscope $end
$scope module f5 $end
$var wire 1 + i0 $end
$var wire 1 ( i1 $end
$var wire 1 0 s $end
$var wire 1 ) y $end
$upscope $end
$scope module f6 $end
$var wire 1 ) i0 $end
$var wire 1 , i1 $end
$var wire 1 1 s $end
$var wire 1 ! y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
01
00
0/
1.
0-
0,
1+
1*
1)
1(
b0 '
b0 &
1%
1$
0#
1"
1!
$end
#10
1-
0.
1/
0*
0,
10
1#
b1 &
b1 '
#20
0!
1)
1.
0/
1"
1*
0-
0,
00
11
0#
b10 &
b10 '
#30
1-
0!
0.
1/
0*
0,
10
1#
b11 &
b11 '
