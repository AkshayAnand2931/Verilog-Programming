$date
	Wed Aug 24 10:16:16 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 4 ! d [3:0] $end
$var wire 4 " car [3:0] $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % c $end
$scope module a1 $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % c $end
$var wire 4 ( d [3:0] $end
$var wire 4 ) car [3:0] $end
$scope module a1 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 % cin $end
$var wire 1 , z $end
$var wire 1 - y $end
$var wire 1 . x $end
$var wire 1 / s $end
$var wire 1 0 cy $end
$scope module a1 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 - c $end
$upscope $end
$scope module a2 $end
$var wire 1 % a $end
$var wire 1 , c $end
$var wire 1 . b $end
$upscope $end
$scope module o1 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 0 c $end
$upscope $end
$scope module x1 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 . c $end
$upscope $end
$scope module x2 $end
$var wire 1 % a $end
$var wire 1 . b $end
$var wire 1 / c $end
$upscope $end
$upscope $end
$scope module a2 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 3 cin $end
$var wire 1 4 z $end
$var wire 1 5 y $end
$var wire 1 6 x $end
$var wire 1 7 s $end
$var wire 1 8 cy $end
$scope module a1 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 5 c $end
$upscope $end
$scope module a2 $end
$var wire 1 3 a $end
$var wire 1 4 c $end
$var wire 1 6 b $end
$upscope $end
$scope module o1 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 8 c $end
$upscope $end
$scope module x1 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 6 c $end
$upscope $end
$scope module x2 $end
$var wire 1 3 a $end
$var wire 1 6 b $end
$var wire 1 7 c $end
$upscope $end
$upscope $end
$scope module a3 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; cin $end
$var wire 1 < z $end
$var wire 1 = y $end
$var wire 1 > x $end
$var wire 1 ? s $end
$var wire 1 @ cy $end
$scope module a1 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 = c $end
$upscope $end
$scope module a2 $end
$var wire 1 ; a $end
$var wire 1 < c $end
$var wire 1 > b $end
$upscope $end
$scope module o1 $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 @ c $end
$upscope $end
$scope module x1 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 > c $end
$upscope $end
$scope module x2 $end
$var wire 1 ; a $end
$var wire 1 > b $end
$var wire 1 ? c $end
$upscope $end
$upscope $end
$scope module a4 $end
$var wire 1 A a $end
$var wire 1 B b $end
$var wire 1 C cin $end
$var wire 1 D z $end
$var wire 1 E y $end
$var wire 1 F x $end
$var wire 1 G s $end
$var wire 1 H cy $end
$scope module a1 $end
$var wire 1 A a $end
$var wire 1 B b $end
$var wire 1 E c $end
$upscope $end
$scope module a2 $end
$var wire 1 C a $end
$var wire 1 D c $end
$var wire 1 F b $end
$upscope $end
$scope module o1 $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 H c $end
$upscope $end
$scope module x1 $end
$var wire 1 A a $end
$var wire 1 B b $end
$var wire 1 F c $end
$upscope $end
$scope module x2 $end
$var wire 1 C a $end
$var wire 1 F b $end
$var wire 1 G c $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0H
1G
1F
0E
0D
0C
0B
1A
0@
1?
0>
0=
0<
1;
0:
09
18
17
06
15
04
13
12
11
10
x/
0.
1-
0,
1+
1*
b11 )
b111x (
b11 '
b1011 &
x%
b11 $
b1011 #
b11 "
b111x !
$end
